from services.csv_analyses import DatasetAnalysesMaker
from services.report_manager import ReportFileCreator
from schemas.schemas import AllCodesWithInsights
from config import LLMConfig, ReportConfig



class DatasetAnalyzer:
    """
    Handles the process of converting a CSV dataset into a structured analysis report.

    This class orchestrates the workflow by using a DatasetAnalysesMaker to generate insights
    and a ReportFileCreator to build the final report file, applying the desired theme and formatting.

    Attributes:
        dataset_analyses_maker (DatasetAnalysesMaker): Service for generating dataset analyses and insights.
        report_creator (ReportFileCreator): Service for creating the report file.
        report_config (ReportConfig): Configuration for report themes and file paths.
    """

    def __init__(
        self,
        dataset_analyses_maker: DatasetAnalysesMaker,
        report_creator: ReportFileCreator,
        report_config: ReportConfig
    ):
        """
        Initializes the DatasetAnalyzer with required services and configuration.

        Args:
            dataset_analyses_maker (DatasetAnalysesMaker): The analyses maker service.
            report_creator (ReportFileCreator): The report file creator service.
            report_config (ReportConfig): Configuration for report generation.
        """
        self.dataset_analyses_maker = dataset_analyses_maker
        self.report_creator = report_creator
        self.report_config = report_config

    def convert_dataset_to_report(
        self,
        csv_path: str,
        number_of_analyses: int = 50,
        report_title: str = "Dataset Analysis Report",
        footer_text: str = "Generated by Data Analysis Story Teller",
        output_file: str = "styled_report.html",
        page_title: str = "Dataset Report",
        dark_theme: bool = False,
        callback_func: any = None
    ) -> bool:
        """
        Converts a CSV dataset into a structured analysis report.

        This method generates analyses and insights for the dataset, applies the selected theme,
        and creates a styled HTML report file.

        Args:
            csv_path (str): Path to the CSV file to analyze.
            number_of_analyses (int, optional): Number of analyses to generate. Defaults to 50.
            report_title (str, optional): Title for the report. Defaults to "Dataset Analysis Report".
            footer_text (str, optional): Footer text for the report. Defaults to "Generated by Data Analysis Story Teller".
            output_file (str, optional): Output HTML file name. Defaults to "styled_report.html".
            page_title (str, optional): Page title for the report. Defaults to "Dataset Report".
            dark_theme (bool, optional): Whether to use the dark theme. Defaults to False.
            callback_func (any, optional): Optional callback for progress updates.

        Returns:
            bool: True if the report was generated successfully.
        """
        analyses_data: AllCodesWithInsights = self.dataset_analyses_maker.turn_csv_dataset_into_analysis(
            csv_path, number_of_analyses, dark_theme, callback_func
        )

        if dark_theme:
            theme_file_path = self.report_config.dark_theme_file_path
        else:
            theme_file_path = self.report_config.light_theme_file_path

        self.report_creator.create_report(
            analyses_data,
            theme_file_path=theme_file_path,
            block_file_path=self.report_config.block_file_path,
            output_file=output_file,
            report_title=report_title,
            page_title=page_title,
            footer_text=footer_text
        )


        return True